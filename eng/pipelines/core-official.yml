# Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE.md file in the project root for more information.

# Name: dotnet-project-system-Trusted
# URL: https://dev.azure.com/devdiv/DevDiv/_build?definitionId=17625

###################################################################################################################################################################
# PIPELINE METADATA
###################################################################################################################################################################

# Activates the pipeline after a PR is merged.
# See: https://docs.microsoft.com/azure/devops/pipelines/yaml-schema/trigger?view=azure-pipelines#examples
trigger:
  branches:
    include:
    - dev/PortToNET6

# Disable PR builds for this pipeline.
# See: https://docs.microsoft.com/azure/devops/pipelines/yaml-schema/pr?view=azure-pipelines#examples
pr: none

resources:
  # pipelines:
  # - pipeline: CI
  #   source: vs-green-server
  #   tags:
  #   - Real signed
  #   trigger:
  #     tags:
  #     - Real signed
  #     - auto-insertion
  repositories:
  # This repo is used to create the insertion PR into the vs-green repo.
  - repository: VSCodeExtensionRepo
    type: git
    name: vs-green

pool:
  # Agent Queue: https://devdiv.visualstudio.com/DevDiv/_settings/agentqueues?queueId=3123&view=jobs
  name: VSEngSS-MicroBuild2022-1ES
  # Demands Docs: https://docs.microsoft.com/azure/devops/pipelines/process/demands?view=azure-devops&tabs=yaml#manually-entered-demands
  demands: Cmd

variables:
  # The configuration for the build is used throughout the various pipelines as the file paths for output contain the build configuration as a folder name.
  BuildConfiguration: Release
  # https://docs.microsoft.com/dotnet/core/tools/dotnet-environment-variables#dotnet_skip_first_time_experience
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # https://docs.microsoft.com/dotnet/core/tools/dotnet-environment-variables#dotnet_nologo
  DOTNET_NOLOGO: true
  # Opt out of automatically injecting Codesign Validation into the pipeline.
  # See: https://aka.ms/gdn-injection
  runCodesignValidationInjection: false
  # Suspend enforcement of NuGet Single Feed Policy. See:
  # - https://aka.ms/nugetmultifeed
  # - https://docs.opensource.microsoft.com/tools/nuget_security_analysis/nuget_security_analysis/
  # - https://docs.opensource.microsoft.com/tools/cg/how-to/nuget-multifeed-configuration/
  # - https://onebranch.visualstudio.com/OneBranch/_wiki/wikis/OneBranch.wiki/5205/TSG-Build-Broken-Due-to-Using-Multiple-Feeds?anchor=setting-nugetsecurityanalysiswarninglevel-in-cdp
  NugetSecurityAnalysisWarningLevel: none
  # Sets the fetch depth to no longer be a shallow clone. Nerdbank.GitVersioning requires a non-shallow clone.
  # See:
  # - https://github.com/dotnet/Nerdbank.GitVersioning/issues/423
  # - https://github.com/dotnet/Nerdbank.GitVersioning/issues/92
  # Variable reference: https://learn.microsoft.com/en-us/azure/devops/pipelines/repos/pipeline-options-for-git?view=azure-devops&tabs=yaml#shallow-fetch
  Agent.Source.Git.ShallowFetchDepth: 0

parameters:
- name: CreateInsertion
  displayName: Create vs-green Insertion PR
  type: boolean
  default: false
- name: InsertionVSGreenBranch
  displayName: vs-green Insertion Branch Name
  type: string
  default: main

###################################################################################################################################################################
# STAGES
###################################################################################################################################################################

stages:
- stage: Build
  displayName: Build
  variables:
    # Only used for tracking purposes in MicroBuild tasks.
    # See: https://devdiv.visualstudio.com/DevDiv/_wiki/wikis/DevDiv.wiki/650/MicroBuild-Signing?anchor=high-level-steps-to-enable-signing
    TeamName: DotNet-Project-System
  jobs:
  - template: templates/build-core-official-release.yml

- ${{ if eq(parameters.CreateInsertion, true) }}:
  - stage: Insertion
    displayName: Insertion
    dependsOn: Build
    jobs:
    - template: azure-pipelines/external/component-insertion.yml@VSCodeExtensionRepo
      parameters:
        VariableInitSteps:
        - script:
          displayName: === Empty Init ===
          condition: false
        # VariableInitSteps:
        # - download: CI
        #   artifact: Variables-Windows
        #   displayName: Download vs-green-server Artifacts
        # - powershell: . '$(Pipeline.Workspace)/CI/Variables-Windows/_pipelines.ps1'
        #   displayName: Set Pipeline Variables
        sourceBranch: $(Build.SourceBranch)
        sourceCommit: $(Build.SourceVersion)
        runName: $(Build.BuildNumber)
        runID: $(Build.BuildId)
        pipelineID: $(System.DefinitionId)
        InsertTargetBranch: ${{ parameters.InsertionVSGreenBranch }}