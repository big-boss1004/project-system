# Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE.md file in the project root for more information.

jobs:
- job: AnalyzeVulnerabilities
  displayName: Analyze Vulnerabilities
  timeoutInMinutes: 60
  steps:

  ###################################################################################################################################################################
  # RUN ANALYSIS
  ###################################################################################################################################################################

  # Use a disabled, empty script to display the section header in the pipeline UI.
  - script:
    displayName: === Run Analysis ===
    condition: false

  # Scan the managed code for security vulnerabilities.
  # YAML reference: https://eng.ms/docs/security-compliance-identity-and-management-scim/security/azure-security/cloudai-security-fundamentals-engineering/security-integration/guardian-wiki/sdl-azdo-extension/codeql-build-task#v1
  - task: Semmle@1
    displayName: Run CodeQL
    inputs:
      sourceCodeDirectory: $(Build.SourcesDirectory)
      buildCommandsString: $(Build.SourcesDirectory)/build.cmd /v:normal /p:Configuration=$(BuildConfiguration) /p:CIBuild=true /p:Test=false /p:Pack=false /p:TestProjects=false /p:SetupProjects=false

  ###################################################################################################################################################################
  # PUBLISH RESULTS
  ###################################################################################################################################################################

  # Use a disabled, empty script to display the section header in the pipeline UI.
  - script:
    displayName: === Publish Results ===
    condition: false

  # Only run this task if UploadTSAResults was specified.
  - ${{ if eq(variables.UploadTSAResults, true) }}:
    # Upload the output of the compliance tools to Trust Services Automation (TSA), and create Azure DevOps work items for failures.
    # TSA overview: https://eng.ms/docs/cloud-ai-platform/developer-services/one-engineering-system-1es/1es-docs/trust-services-automation-tsa/tsa-overview
    # YAML reference: https://eng.ms/docs/cloud-ai-platform/developer-services/one-engineering-system-1es/1es-docs/trust-services-automation-tsa/tsa-upload-build-task#yaml-reference
    - task: TSAUpload@2
      displayName: Upload Results to TSA
      inputs:
        GdnPublishTsaOnboard: true
        # Configures the compliance tool results to process.
        # Configuration file format:
        # - https://eng.ms/docs/security-compliance-identity-and-management-scim/security/azure-security/cloudai-security-fundamentals-engineering/security-integration/guardian-wiki/microsoft-guardian/guardian-tsa#tsa-options-file
        # - https://dev.azure.com/securitytools/SecurityIntegration/_wiki/wikis/Guardian/1409/Guardian-TSA?anchor=tsa-options-file
        GdnPublishTsaConfigFile: $(Build.SourcesDirectory)/eng/pipelines/configuration/TSAConfig.gdntsa
        GdnPublishTsaExportedResultsPublishable: true
      condition: succeededOrFailed()

  # Publishes the results as artifacts to the Azure Pipeline.
  # YAML reference: https://eng.ms/docs/security-compliance-identity-and-management-scim/security/azure-security/cloudai-security-fundamentals-engineering/security-integration/guardian-wiki/sdl-azdo-extension/publish-security-analysis-logs#v3
  - task: PublishSecurityAnalysisLogs@3
    displayName: Publish Vulnerabilities Artifacts
    inputs:
      ArtifactName: Analysis-Vulnerabilities
      ArtifactType: Container
      AllTools: true
      ToolLogsNotFoundAction: Standard
    condition: succeededOrFailed()