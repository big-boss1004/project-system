<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE.md file in the project root for more information. -->
<Project>

  <Import Project="..\Directory.Build.props" />

  <ItemGroup>
    <SuppressFromVsix Include="Microsoft.VSDesigner.dll" />
    <SuppressFromVsix Include="Microsoft.VisualStudio.DataTools.Interop.dll" />
    <SuppressFromVsix Include="Microsoft.VisualStudio.XmlEditor.dll" />
  </ItemGroup>

  <PropertyGroup>
    <!-- Prevent the extension.vsixmanifest from each VS Extension project to write to the same output directory, overriding each other's file. This prevents the target CopyVsixManifestFile from the VSSDK.BuildTools from executing. -->
    <CopyVsixManifestToOutput>false</CopyVsixManifestToOutput>
    <PublishOutputToSymStore>false</PublishOutputToSymStore>
    <IncludeAssemblyInVSIXContainer>false</IncludeAssemblyInVSIXContainer>
    <!-- During evaluation, Microsoft.VisualStudio.Internal.MicroBuild.targets will attempt to add the VSIX file in $(VisualStudioSetupInsertionPath) to FilesToSign. -->
    <!-- This will fail to sign files in that location since the files are required to be in OutDir or IntermediateOutputPath for signing. -->
    <EnableDefaultSignFiles>false</EnableDefaultSignFiles>

    <!-- See: https://dev.azure.com/devdiv/DevDiv/_wiki/wikis/DevDiv.wiki/29786/Common-setup-authoring-recommendations?anchor=recommendations -->
    <VsixOutputPath>$(VisualStudioSetupInsertionPath)</VsixOutputPath>
    <NoSwixBuildPlugin>true</NoSwixBuildPlugin>

    <VsixSourceManifestPath>$(MSBuildProjectDirectory)\source.extension.vsixmanifest</VsixSourceManifestPath>
    <!-- This property indicates that the project is a VS Extension project. The SwixBuild plugin expects this value to be set for the AddSBOM task. -->
    <IsVsixProject Condition="Exists('$(VsixSourceManifestPath)')">true</IsVsixProject>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.VisualStudio.Internal.MicroBuild" />
  </ItemGroup>

  <PropertyGroup Condition="'$(IsVsixProject)' == 'true'">
    <SchemaVersion>2.0</SchemaVersion>
    <CreateVsixContainer>true</CreateVsixContainer>
    <IncludeDebugSymbolsInVSIXContainer>false</IncludeDebugSymbolsInVSIXContainer>
    <IncludeDebugSymbolsInLocalVSIXDeployment>false</IncludeDebugSymbolsInLocalVSIXDeployment>
    <IncludeCopyLocalReferencesInVSIXContainer>false</IncludeCopyLocalReferencesInVSIXContainer>
    <IsProductComponent>true</IsProductComponent>
    <IsPackable>false</IsPackable>
    <BuildForLiveUnitTesting>false</BuildForLiveUnitTesting>
    <!-- Runs the DeployVsixExtensionFiles from the VSSDK to enable the extension on the local machine. -->
    <DeployExtension Condition="'$(CIBuild)' != 'true'">true</DeployExtension>

    <StartAction>Program</StartAction>
    <StartProgram>$(DevEnvDir)devenv.exe</StartProgram>
    <StartArguments>/rootsuffix $(VSSDKTargetPlatformRegRootSuffix) /log</StartArguments>

    <Ngen>true</Ngen>
    <NgenArchitecture>All</NgenArchitecture>
    <NgenPriority>3</NgenPriority>
  </PropertyGroup>

  <PropertyGroup Condition="'$(MSBuildProjectExtension)' == '.vsmanproj' or '$(MSBuildProjectExtension)' == '.swixproj'">
    <FinalizeManifest>true</FinalizeManifest>
    <FinalizeSkipLayout>true</FinalizeSkipLayout>
    <IsPackage>true</IsPackage>
    <TargetName>$(MSBuildProjectName)</TargetName>
    <OutputPath>$(VisualStudioSetupInsertionPath)</OutputPath>
    <IntermediateOutputPath>$(VisualStudioSetupIntermediateOutputPath)$(TargetName)\</IntermediateOutputPath>
  </PropertyGroup>

  <!-- Note: Our .swixproj has no code being deployed in it; thus, it does not need an SBOM. -->
  <PropertyGroup Condition="'$(IsVsixProject)' == 'true' or '$(MSBuildProjectExtension)' == '.vsmanproj'">
    <!-- See: https://dev.azure.com/devdiv/DevDiv/_wiki/wikis/DevDiv.wiki/29786/Common-setup-authoring-recommendations?anchor=including-sbom-support -->
    <SBOMFileDestPath>$(VisualStudioSetupInsertionPath)Sbom\$(MSBuildProjectName)</SBOMFileDestPath>
    <!-- MicroBuild.Plugins.Sbom.targets uses this to set the output path (ManifestDirPath) for the GenerateSBOM target. -->
    <SbomManifestDirPath>$(TargetDir)Sbom\$(MSBuildProjectName)</SbomManifestDirPath>
  </PropertyGroup>

</Project>