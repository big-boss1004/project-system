<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE.md file in the project root for more information. -->
<Project>

  <Import Project="..\Directory.Build.targets" />

  <!--
    Defining this target will disable the SDK behavior of implicit transitive project references.
    The current implementation breaks VSIX construction by including a number of projects that should not be included.
    https://github.com/dotnet/sdk/issues/1366
  -->
  <!-- TODO: See if this is necessary. -->
  <Target Name="IncludeTransitiveProjectReferences" />

  <!-- Add the VSIX files from VS Extension projects for signing. -->
  <Target Name="AddVsixForSigning" DependsOnTargets="CreateVsixContainer" BeforeTargets="SignFiles" Condition="'$(IsVsixProject)' == 'true'">
    <!-- Required to be in either OutDir or IntermediateOutputPath for signing. It'll be copied after signing via the CopyVsixAfterSigning target. -->
    <!-- https://devdiv.visualstudio.com/DevDiv/_wiki/wikis/DevDiv.wiki/650/MicroBuild-Signing?anchor=modify-your-project-file-to-include-%60filestosign%60-itemgroup -->
    <Copy SourceFiles="$(VisualStudioSetupInsertionPath)$(AssemblyName).vsix" DestinationFolder="$(OutDir)" />
    <ItemGroup>
      <FilesToSign Include="$(OutDir)$(AssemblyName).vsix">
        <Authenticode>VsixSHA2</Authenticode>
      </FilesToSign>
    </ItemGroup>
  </Target>

  <!-- Copies the VSIX files after they've been signed from VS Extension projects to the appropriate output folder. -->
  <Target Name="CopyVsixAfterSigning" AfterTargets="SignFiles" Condition="'$(IsVsixProject)' == 'true'">
    <Copy SourceFiles="$(OutDir)$(AssemblyName).vsix" DestinationFolder="$(VisualStudioSetupInsertionPath)" />
    <!-- <Copy SourceFiles="$(OutDir)$(AssemblyName).vsix" DestinationFolder="$(VisualStudioSetupOutputPath)" /> -->
  </Target>

  <!-- Sets the Experimental attribute on the VSIX manifest to 'false' for builds in CI. -->
  <Target Name="RemoveExperimentalAttributeFromVsixManifest" AfterTargets="DetokenizeVsixManifestFile" Condition="'$(CIBuild)' == 'true'">
    <PropertyGroup>
      <ObjVsixManifestPath>$(ArtifactsObjDir)$(MSBuildProjectName)\extension.vsixmanifest</ObjVsixManifestPath>
    </PropertyGroup>
    <Exec ContinueOnError="false" Command="powershell -NonInteractive -NoLogo -NoProfile -ExecutionPolicy Unrestricted -Command &quot;$manifestXml = [Xml.XmlDocument](Get-Content '$(ObjVsixManifestPath)');$manifestXml.PackageManifest.Installation.SetAttribute('Experimental', 'false');$manifestXml.Save('$(ObjVsixManifestPath)')&quot;" />
  </Target>

  <!-- Specifies the version number that is used within the 'source.extension.vsixmanifest' files for VSIX packages. -->
  <Target Name="GetVsixVersion" Outputs="$(BuildVersion)" Condition="'$(IsVsixProject)' == 'true'" />

</Project>
