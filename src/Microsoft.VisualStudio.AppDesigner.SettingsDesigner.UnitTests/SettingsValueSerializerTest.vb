'The following code was generated by Microsoft Visual Studio 2005.
'The test owner should check each test for validity.
Imports Microsoft.VisualStudio.TestTools.UnitTesting
Imports System
Imports System.Text
Imports System.Collections.Generic
Imports SettingsDesignerUnitTests
Imports System.Globalization






'''<summary>
'''This is a test class for Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsValueSerializer and is intended
'''to contain all Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsValueSerializer Unit Tests
'''</summary>
<TestClass()> _
Public Class SettingsValueSerializerTest


    Private testContextInstance As TestContext

    '''<summary>
    '''Gets or sets the test context which provides
    '''information about and functionality for the current test run.
    '''</summary>
    Public Property TestContext() As TestContext
        Get
            Return testContextInstance
        End Get
        Set(ByVal value As TestContext)
            testContextInstance = value
        End Set
    End Property
#Region "Additional test attributes"
    '
    'You can use the following additional attributes as you write your tests:
    '
    'Use ClassInitialize to run code before running the first test in the class
    '
    '<ClassInitialize()>  _
    'Public Shared Sub MyClassInitialize(ByVal testContext As TestContext)
    'End Sub
    '
    'Use ClassCleanup to run code after all tests in a class have run
    '
    '<ClassCleanup()>  _
    'Public Shared Sub MyClassCleanup()
    'End Sub
    '
    'Use TestInitialize to run code before running each test
    '
    '<TestInitialize()>  _
    'Public Sub MyTestInitialize()
    'End Sub
    '
    'Use TestCleanup to run code after each test has run
    '
    '<TestCleanup()>  _
    'Public Sub MyTestCleanup()
    'End Sub
    '
#End Region


    '''<summary>
    '''A test for Deserialize(ByVal System.Type, ByVal String, ByVal System.Globalization.CultureInfo)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub DeserializeTest_String()
        Dim target As Object = Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor.CreatePrivate

        Dim accessor As Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor = New Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor(target)

        Dim ValueType As Type = GetType(String)

        Dim serializedValue As String = "Foo"

        Dim culture As CultureInfo = CultureInfo.InvariantCulture

        Dim expected As Object = serializedValue
        Dim actual As Object

        actual = accessor.Deserialize(ValueType, serializedValue, culture)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsValueSerializer.Deseriali" & _
                "ze did not return the expected value.")
    End Sub

    '''<summary>
    '''A test for Deserialize(ByVal System.Type, ByVal String, ByVal System.Globalization.CultureInfo)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub DeserializeTest_StringWithEscapedValues()
        Dim target As Object = Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor.CreatePrivate

        Dim accessor As Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor = New Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor(target)

        Dim ValueType As Type = GetType(String)

        Dim serializedValue As String = "<""Foo"">"

        Dim culture As CultureInfo = CultureInfo.InvariantCulture

        Dim expected As Object = serializedValue
        Dim actual As Object

        actual = accessor.Deserialize(ValueType, serializedValue, culture)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsValueSerializer.Deseriali" & _
                "ze did not return the expected value.")
    End Sub

    '''<summary>
    '''A test for Deserialize(ByVal System.Type, ByVal String, ByVal System.Globalization.CultureInfo)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub DeserializeTest_StringWithEscapedValues_CurrentCulture()
        Dim target As Object = Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor.CreatePrivate

        Dim accessor As Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor = New Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor(target)

        Dim ValueType As Type = GetType(String)

        Dim serializedValue As String = "<""Foo"">"

        Dim culture As CultureInfo = CultureInfo.CurrentCulture

        Dim expected As Object = serializedValue
        Dim actual As Object

        actual = accessor.Deserialize(ValueType, serializedValue, culture)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsValueSerializer.Deseriali" & _
                "ze did not return the expected value.")
    End Sub

    '''<summary>
    '''A test for Deserialize(ByVal System.Type, ByVal String, ByVal System.Globalization.CultureInfo)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub DeserializeTest_FontFromEmptyString()
        Dim target As Object = Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor.CreatePrivate

        Dim accessor As Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor = New Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor(target)

        Dim ValueType As Type = GetType(System.Drawing.Font)

        Dim serializedValue As String = ""

        Dim culture As CultureInfo = CultureInfo.InvariantCulture

        Dim expected As Object = Nothing
        Dim actual As Object

        actual = accessor.Deserialize(ValueType, serializedValue, culture)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsValueSerializer.Deseriali" & _
                "ze did not return the expected value.")
    End Sub

    '''<summary>
    '''A test for Deserialize(ByVal System.Type, ByVal String, ByVal System.Globalization.CultureInfo)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub DeserializeTest_ConnectionString()
        Dim target As Object = Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor.CreatePrivate

        Dim accessor As Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor = New Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor(target)

        Dim ValueType As Type = GetType(Microsoft.VSDesigner.VSDesignerPackage.SerializableConnectionString)

        Dim serializedValue As String = "<?xml version=""1.0"" encoding=""utf-16""?>" & System.Environment.NewLine & _
                                        "<SerializableConnectionString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">" & System.Environment.NewLine & _
                                        "  <ConnectionString>ReadOnly=True;</ConnectionString>" & System.Environment.NewLine & _
                                        "  <ProviderName>Dummy</ProviderName>" & System.Environment.NewLine & _
                                        "</SerializableConnectionString>"

        Dim culture As CultureInfo = CultureInfo.InvariantCulture

        Dim actual As Object

        actual = accessor.Deserialize(ValueType, serializedValue, culture)

        Assert.IsNotNull(actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsValueSerializer.Deseriali" & _
                "ze did not return the expected value.")
    End Sub

    '''<summary>
    '''A test for Deserialize(ByVal System.Type, ByVal String, ByVal System.Globalization.CultureInfo)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub DeserializeTest_ConnectionStringFromNormalString()
        Dim target As Object = Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor.CreatePrivate

        Dim accessor As Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor = New Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor(target)

        Dim ValueType As Type = GetType(Microsoft.VSDesigner.VSDesignerPackage.SerializableConnectionString)

        Dim serializedValue As String = "ReadOnly=True"

        Dim culture As CultureInfo = CultureInfo.InvariantCulture

        Dim actual As Object

        actual = accessor.Deserialize(ValueType, serializedValue, culture)

        Assert.IsNotNull(actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsValueSerializer.Deseriali" & _
                "ze did not return the expected value.")
    End Sub

    '''<summary>
    '''A test for Deserialize(ByVal System.Type, ByVal String, ByVal System.Globalization.CultureInfo)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub DeserializeTest_DateTimeFromSwedish_Success()
        Dim target As Object = Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor.CreatePrivate

        Dim accessor As Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor = New Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor(target)

        Dim ValueType As Type = GetType(System.DateTime)

        Dim serializedValue As String = "2005-13-01"

        Dim culture As CultureInfo = CultureInfo.GetCultureInfo("sv-SE")

        Dim expected As Object = Nothing
        Dim actual As Object

        actual = accessor.Deserialize(ValueType, serializedValue, culture)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsValueSerializer.Deseriali" & _
                "ze did not return the expected value.")
    End Sub

    '''<summary>
    '''A test for Deserialize(ByVal System.Type, ByVal String, ByVal System.Globalization.CultureInfo)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub DeserializeTest_DateTimeFromSwedishFailure()
        Dim target As Object = Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor.CreatePrivate

        Dim accessor As Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor = New Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor(target)

        Dim ValueType As Type = GetType(System.DateTime)

        Dim serializedValue As String = "2005-12-01"

        Dim culture As CultureInfo = CultureInfo.GetCultureInfo("sv-SE")

        Dim expected As Object = DateTime.Parse(serializedValue, culture)
        Dim actual As Object

        actual = accessor.Deserialize(ValueType, serializedValue, culture)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsValueSerializer.Deseriali" & _
                "ze did not return the expected value.")
    End Sub



    '''<summary>
    '''A test for Normalize(ByVal String, ByVal System.Type)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub NormalizeTest()
        Dim target As Object = Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor.CreatePrivate

        Dim accessor As Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor = New Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor(target)

        Dim serializedValue As String = "2005-01-02 00:00:00"

        Dim type As Type = GetType(System.DateTime)

        Dim expected As String = "2005-01-02"
        Dim actual As String

        actual = accessor.Normalize(serializedValue, type)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsValueSerializer.Normalize" & _
                " did not return the expected value.")
    End Sub

    '''<summary>
    '''A test for Serialize(ByVal Object, ByVal System.Globalization.CultureInfo)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub SerializeTest_InvariantCulture()
        Dim target As Object = Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor.CreatePrivate

        Dim accessor As Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor = New Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor(target)

        Dim value As Object = New System.DateTime(2005, 1, 2)

        Dim culture As CultureInfo = CultureInfo.InvariantCulture

        Dim dtc As System.ComponentModel.TypeConverter = System.ComponentModel.TypeDescriptor.GetConverter(value)

        Dim expected As String = dtc.ConvertToString(Nothing, culture, value)
        Dim actual As String

        actual = accessor.Serialize(value, culture)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsValueSerializer.Serialize" & _
                " did not return the expected value.")
    End Sub

    '''<summary>
    '''A test for Serialize(ByVal Object, ByVal System.Globalization.CultureInfo)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub SerializeTest_EnglishCulture()
        Dim target As Object = Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor.CreatePrivate

        Dim accessor As Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor = New Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor(target)

        Dim value As Object = New System.DateTime(2005, 1, 2)

        Dim culture As CultureInfo = CultureInfo.GetCultureInfo("en-US")

        Dim tc As System.ComponentModel.TypeConverter = System.ComponentModel.TypeDescriptor.GetConverter(value)
        Dim expected As String = tc.ConvertToString(Nothing, culture, value)
        Dim actual As String

        actual = accessor.Serialize(value, culture)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsValueSerializer.Serialize" & _
                " did not return the expected value.")
    End Sub

    '''<summary>
    '''A test for Serialize(ByVal Object, ByVal System.Globalization.CultureInfo)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub SerializeTest_ConnectionString()
        Dim target As Object = Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor.CreatePrivate

        Dim accessor As Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor = New Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor(target)

        Dim value As New Microsoft.VSDesigner.VSDesignerPackage.SerializableConnectionString
        value.ConnectionString = "ReadOnly=True;"
        value.ProviderName = "Dummy"

        Dim expected As String = "<?xml version=""1.0"" encoding=""utf-16""?>" & System.Environment.NewLine & _
                                 "<SerializableConnectionString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">" & System.Environment.NewLine & _
                                 "  <ConnectionString>ReadOnly=True;</ConnectionString>" & System.Environment.NewLine & _
                                 "  <ProviderName>Dummy</ProviderName>" & System.Environment.NewLine & _
                                 "</SerializableConnectionString>"
        Dim actual As String

        actual = accessor.Serialize(value, System.Globalization.CultureInfo.InvariantCulture)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsValueSerializer.Serialize" & _
                " did not return the expected value.")
    End Sub

    '''<summary>
    '''A test for Serialize(ByVal Object, ByVal System.Globalization.CultureInfo)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub SerializeTest_Nothing()
        Dim target As Object = Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor.CreatePrivate

        Dim accessor As Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor = New Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor(target)

        Dim value As Object = Nothing

        Dim culture As CultureInfo = CultureInfo.InvariantCulture

        Dim expected As String = ""
        Dim actual As String

        actual = accessor.Serialize(value, culture)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsValueSerializer.Serialize" & _
                " did not return the expected value.")
    End Sub



    '''<summary>
    '''A test for Serialize(ByVal Object, ByVal System.Globalization.CultureInfo)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub SerializeTest_TestClass()
        Dim target As Object = Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor.CreatePrivate

        Dim accessor As Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor = New Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor(target)

        Dim value As Object = New TestClasses.XmlSerializableTestClass()

        Dim culture As CultureInfo = CultureInfo.InvariantCulture

        Dim expected As String = "<?xml version=""1.0"" encoding=""utf-16""?>" & System.Environment.NewLine & _
                                 "<XmlSerializableTestClass xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">" & System.Environment.NewLine & _
                                 "  <Bar>Zoo</Bar>" & System.Environment.NewLine & _
                                 "</XmlSerializableTestClass>"
        Dim actual As String

        actual = accessor.Serialize(value, culture)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsValueSerializer.Serialize" & _
                " did not return the expected value.")
    End Sub


    '''<summary>
    '''A test for Serialize(ByVal Object, ByVal System.Globalization.CultureInfo)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub SerializeTest_String()
        Dim target As Object = Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor.CreatePrivate

        Dim accessor As Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor = New Microsoft_VisualStudio_Editors_SettingsDesigner_SettingsValueSerializerAccessor(target)

        Dim value As Object = "<?xml version=""1.0"" encoding=""utf-16""?>" & System.Environment.NewLine & _
                                 "<Zoo xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">" & System.Environment.NewLine & _
                                 "  <Bar>Zoo</Bar>" & System.Environment.NewLine & _
                                 "</Zoo>"
        Dim culture As CultureInfo = CultureInfo.InvariantCulture

        Dim expected As String = DirectCast(value, String)
        Dim actual As String

        actual = accessor.Serialize(value, culture)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsValueSerializer.Serialize" & _
                " did not return the expected value.")
    End Sub
End Class
