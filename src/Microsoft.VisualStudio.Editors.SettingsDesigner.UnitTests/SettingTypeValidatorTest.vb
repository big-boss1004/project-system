'The following code was generated by Microsoft Visual Studio 2005.
'The test owner should check each test for validity.
Imports Microsoft.VisualStudio.TestTools.UnitTesting
Imports System
Imports System.Text
Imports System.Collections.Generic

Imports System.ComponentModel.Design



'''<summary>
'''This is a test class for Microsoft.VisualStudio.Editors.SettingsDesigner.SettingTypeValidator and is intended
'''to contain all Microsoft.VisualStudio.Editors.SettingsDesigner.SettingTypeValidator Unit Tests
'''</summary>
<TestClass()> _
Public Class SettingTypeValidatorTest


    Private testContextInstance As TestContext

    '''<summary>
    '''Gets or sets the test context which provides
    '''information about and functionality for the current test run.
    '''</summary>
    Public Property TestContext() As TestContext
        Get
            Return testContextInstance
        End Get
        Set(ByVal value As TestContext)
            testContextInstance = value
        End Set
    End Property
#Region "Additional test attributes"
    '
    'You can use the following additional attributes as you write your tests:
    '
    'Use ClassInitialize to run code before running the first test in the class
    '
    '<ClassInitialize()>  _
    'Public Shared Sub MyClassInitialize(ByVal testContext As TestContext)
    'End Sub
    '
    'Use ClassCleanup to run code after all tests in a class have run
    '
    '<ClassCleanup()>  _
    'Public Shared Sub MyClassCleanup()
    'End Sub
    '
    'Use TestInitialize to run code before running each test
    '
    '<TestInitialize()>  _
    'Public Sub MyTestInitialize()
    'End Sub
    '
    'Use TestCleanup to run code after each test has run
    '
    '<TestCleanup()>  _
    'Public Sub MyTestCleanup()
    'End Sub
    '
#End Region


    '''<summary>
    '''A test for CanSerializeType(ByVal System.Type)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub CanSerializeTypeTest_String()
        Dim type As Type = GetType(String)

        Dim expected As Boolean = True
        Dim actual As Boolean

        actual = SettingsDesignerUnitTests.Microsoft_VisualStudio_Editors_SettingsDesigner_SettingTypeValidatorAccessor.CanSerializeType(type)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingTypeValidator.CanSerialize" & _
                "Type did not return the expected value.")
    End Sub

    '''<summary>
    '''A test for IsTypeObsolete(ByVal System.Type)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
    Ignore(), _
     TestMethod()> _
    Public Sub IsTypeObsoleteTest()
        Dim type As Type = Nothing 'TODO: Initialize to an appropriate value

        Dim expected As Boolean
        Dim actual As Boolean

        actual = SettingsDesignerUnitTests.Microsoft_VisualStudio_Editors_SettingsDesigner_SettingTypeValidatorAccessor.IsTypeObsolete(type)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingTypeValidator.IsTypeObsole" & _
                "te did not return the expected value.")
        Assert.Inconclusive("Verify the correctness of this test method.")
    End Sub

    '''<summary>
    '''A test for IsValidSettingType(ByVal System.Type)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub IsValidSettingTypeTest()
        Dim type As Type = GetType(String)

        Dim expected As Boolean = True
        Dim actual As Boolean

        actual = SettingsDesignerUnitTests.Microsoft_VisualStudio_Editors_SettingsDesigner_SettingTypeValidatorAccessor.IsValidSettingType(type)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingTypeValidator.IsValidSetti" & _
                "ngType did not return the expected value.")
    End Sub

    '''<summary>
    '''A test for IsValidSettingType(ByVal System.Type)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub IsValidSettingTypeTest_SystemVoid()
        Dim type As Type = GetType(System.Void)

        Dim expected As Boolean = False
        Dim actual As Boolean

        actual = SettingsDesignerUnitTests.Microsoft_VisualStudio_Editors_SettingsDesigner_SettingTypeValidatorAccessor.IsValidSettingType(type)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingTypeValidator.IsValidSetti" & _
                "ngType did not return the expected value.")
    End Sub

    '''<summary>
    '''A test for IsValidSettingType(ByVal System.Type)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub IsValidSettingTypeTest_SerializableConnectionString()
        Dim type As Type = GetType(Microsoft.VSDesigner.VSDesignerPackage.SerializableConnectionString)

        Dim expected As Boolean = True
        Dim actual As Boolean

        actual = SettingsDesignerUnitTests.Microsoft_VisualStudio_Editors_SettingsDesigner_SettingTypeValidatorAccessor.IsValidSettingType(type)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingTypeValidator.IsValidSetti" & _
                "ngType did not return the expected value.")
    End Sub

    '''<summary>
    '''A test for IsValidSettingType(ByVal System.Type)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub IsValidSettingTypeTest_Interface()
        Dim type As Type = GetType(System.ICloneable)

        Dim expected As Boolean = False
        Dim actual As Boolean

        actual = SettingsDesignerUnitTests.Microsoft_VisualStudio_Editors_SettingsDesigner_SettingTypeValidatorAccessor.IsValidSettingType(type)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingTypeValidator.IsValidSetti" & _
                "ngType did not return the expected value.")
    End Sub

    '''<summary>
    '''A test for IsValidSettingType(ByVal System.Type)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub IsValidSettingTypeTest_GenericType()
        Dim typeDiscoveryService As ITypeDiscoveryService = New Mockisar.MockITypeDiscoveryService(False, GetType(System.Object), GetType(System.String), GetType(System.Collections.Generic.List(Of )))
        Dim type As System.Type = GetType(System.Collections.Generic.List(Of ))
        Dim expected As Boolean = False
        Dim actual As Boolean

        actual = SettingsDesignerUnitTests.Microsoft_VisualStudio_Editors_SettingsDesigner_SettingTypeValidatorAccessor.IsValidSettingType(type)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingTypeValidator.IsValidSetti" & _
                "ngType did not return the expected value.")
    End Sub

    '''<summary>
    '''A test for IsValidSettingType(ByVal System.Type)
    '''</summary>
    <DeploymentItem("Microsoft.VisualStudio.Editors.dll"), _
     TestMethod()> _
    Public Sub IsValidSettingTypeTest_PrivateType()
        Dim type As Type = GetType(TestClasses.PrivateTestObject)
        Dim expected As Boolean = False
        Dim actual As Boolean
        actual = SettingsDesignerUnitTests.Microsoft_VisualStudio_Editors_SettingsDesigner_SettingTypeValidatorAccessor.IsValidSettingType(type)

        Assert.AreEqual(expected, actual, "Microsoft.VisualStudio.Editors.SettingsDesigner.SettingTypeValidator.IsValidSetti" & _
                "ngType did not return the expected value.")
    End Sub

End Class
