<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ClassTemplateName" xml:space="preserve">
    <value>クラス</value>
  </data>
  <data name="ProjectModificationsPrompt" xml:space="preserve">
    <value>プロジェクト '{0}' は環境外で変更されています。

更新されたプロジェクトをディスクから読み込むには [再読み込み] をクリックしてください。
外部の変更を無視する場合は、[無視] をクリックしてください。この変更は、次にプロジェクトを開いたときに使われます。
    </value>
  </data>
  <data name="ConflictingModificationsPrompt" xml:space="preserve">
    <value>プロジェクト '{0}' は環境の外で変更されており、このプロジェクトへの変更は保存されていません。

変更を保存して更新されたプロジェクトをディスクから読み込むには [名前を付けて保存] を選択してください。
未保存の変更を破棄して更新されたプロジェクトをディスクから読み込むには [破棄] を選択してください。
外部の変更を上書きする場合は [上書き] を選択してください。
外部の変更を無視する場合は、[無視] をクリックしてください。変更点は、プロジェクトを閉じて再度開いたときに失われる可能性があります。
    </value>
  </data>
  <data name="ConflictingProjectModificationTitle" xml:space="preserve">
    <value>競合するプロジェクト変更が検出されました</value>
  </data>
  <data name="Discard" xml:space="preserve">
    <value>破棄(_D)</value>
  </data>
  <data name="Ignore" xml:space="preserve">
    <value>無視(_I)</value>
  </data>
  <data name="IgnoreAll" xml:space="preserve">
    <value>すべて無視(_L)</value>
  </data>
  <data name="Overwrite" xml:space="preserve">
    <value>上書き(_O)</value>
  </data>
  <data name="ProjectModificationDlgTitle" xml:space="preserve">
    <value>プロジェクト変更が検出されました</value>
  </data>
  <data name="Reload" xml:space="preserve">
    <value>再読み込み(_R)</value>
  </data>
  <data name="ReloadAll" xml:space="preserve">
    <value>すべて再読み込み(_L)</value>
  </data>
  <data name="RenameSymbolFailed" xml:space="preserve">
    <value>コード要素 '{0}' の名前変更に失敗しました。</value>
  </data>
  <data name="RenameSymbolPrompt" xml:space="preserve">
    <value>ファイルの名前を変更しようとしています。このプロジェクトのすべての参照をコード要素 '{0}' に名前を変更しますか?</value>
  </data>
  <data name="SaveAs" xml:space="preserve">
    <value>名前を付けて保存(_S)</value>
  </data>
  <data name="FailedToWatchProject" xml:space="preserve">
    <value>プロジェクト ファイル '{0}' をウォッチしようとして予期しないエラーが発生しました</value>
  </data>
  <data name="FrameworkAssembliesNodeName" xml:space="preserve">
    <value>フレームワーク アセンブリ</value>
  </data>
  <data name="ComNodeName" xml:space="preserve">
    <value>COM</value>
  </data>
  <data name="SdkNodeName" xml:space="preserve">
    <value>SDK</value>
  </data>
  <data name="AssembliesNodeName" xml:space="preserve">
    <value>アセンブリ</value>
  </data>
  <data name="DependenciesLoadingPostfix" xml:space="preserve">
    <value> (読み込んでいます...)</value>
  </data>
  <data name="DependenciesNodeErrorsSuffix" xml:space="preserve">
    <value>(エラー - エラー一覧を参照)</value>
  </data>
  <data name="DependenciesNodeName" xml:space="preserve">
    <value>依存関係</value>
  </data>
  <data name="GraphNodeCategoryDependency" xml:space="preserve">
    <value>依存関係</value>
  </data>
  <data name="NoItemTypeForRule" xml:space="preserve">
    <value>規則 {0} の項目の種類が見つかる必要があります。規則ファイルがないか、形式が正しくありません。</value>
  </data>
  <data name="NuGetPackagesNodeName" xml:space="preserve">
    <value>NuGet</value>
  </data>
  <data name="ProjectsNodeName" xml:space="preserve">
    <value>プロジェクト</value>
  </data>
  <data name="AnalyzersNodeName" xml:space="preserve">
    <value>アナライザー</value>
  </data>
  <data name="DotNetCoreProjectsNotSupported" xml:space="preserve">
    <value>Visual Studio のこのリリースでは、.NET Core プロジェクトはサポートされていません。サポートはこれ以降の更新プログラムで利用できるようになります。</value>
  </data>
  <data name="ActiveLaunchProfileNotFound" xml:space="preserve">
    <value>このプロジェクト用に構成されたアクティブな起動プロファイルはありません。</value>
  </data>
  <data name="DontKnowHowToRunProfile" xml:space="preserve">
    <value>プロジェクトには、プロファイル {0} を実行する方法が分かりません。</value>
  </data>
  <data name="ErrorInProfilesFile" xml:space="preserve">
    <value>'{0}' プロジェクトを実行するには、先に起動設定ファイルのエラーを修正する必要があります。詳細については、エラー リストを参照してください。</value>
  </data>
  <data name="ErrorInProfilesFile2" xml:space="preserve">
    <value>'{0}' プロジェクトを実行するには、先に起動設定ファイルのエラーを修正する必要があります。{1}。詳細については、エラー リストを参照してください。</value>
  </data>
  <data name="ProjectNotRunnableDirectly" xml:space="preserve">
    <value>クラス ライブラリの出力タイプを持つプロジェクトを直接起動することはできません。

このプロジェクトをデバッグするには、ライブラリ プロジェクトを参照するこのソリューションに実行可能なプロジェクトを追加します。その実行可能なプロジェクトをスタートアップ プロジェクトとして設定してください。</value>
  </data>
  <data name="NoUrlSpecified" xml:space="preserve">
    <value>デバッグ プロファイル '{0}' で Web ブラウザーの起動が要求されましたが、URL が指定されていませんでした。</value>
  </data>
  <data name="InvalidAbsoluteUrlSpecified" xml:space="preserve">
    <value>デバッグ プロファイル '{0}' で Web ブラウザーの起動が要求されましたが、指定された URL は有効な絶対 URL ではありません。  {1}</value>
  </data>
  <data name="NoDebugExecutableSpecified" xml:space="preserve">
    <value>デバッグ プロファイル '{0}' に、デバッグする実行可能ファイルへのパスが不足しています。</value>
  </data>
  <data name="DebugExecutableNotFound" xml:space="preserve">
    <value>'{1}' デバッグ プロファイルに指定したデバッグ実行可能ファイル '{0}' が存在しません。</value>
  </data>
  <data name="WorkingDirecotryInvalid" xml:space="preserve">
    <value>'{1}' デバッグ プロファイルに指定した作業ディレクトリ '{0}' が存在しません。</value>
  </data>
  <data name="NoMigratedCSProjFound" xml:space="preserve">
    <value>移行された cpsroj が {0} に見つかる必要がありましたが、何も見つかりませんでした。</value>
  </data>
  <data name="XprojMigrationFailed" xml:space="preserve">
    <value>XProj プロジェクト {0} の移行に失敗しました。'dotnet migrate --skip-backup -s -p "{1}" -x "{2}"' はエラー コード {3} で終了しました。</value>
  </data>
  <data name="MigrationBackupFile" xml:space="preserve">
    <value>{0} を {1} にバックアップしています。</value>
  </data>
  <data name="XprojMigrationFailedProjectJsonFileNotFound" xml:space="preserve">
    <value>XProj プロジェクト {0} の移行に失敗しました。{1} で project.json が見つかりませんでした。</value>
  </data>
  <data name="EditProjectFileCommand" xml:space="preserve">
    <value>{0} を編集する</value>
  </data>
  <data name="NoRunCommandSpecifiedInProject" xml:space="preserve">
    <value>プロジェクトを実行できません。"RunCommand" プロパティが定義されていません。</value>
  </data>
  <data name="MultiTFEditNotSupported" xml:space="preserve">
    <value>複数のターゲット フレームワークの編集はサポートされていません。</value>
  </data>
  <data name="PackCommand" xml:space="preserve">
    <value>パック(&amp;P)</value>
  </data>
  <data name="PackSelectedProjectCommand" xml:space="preserve">
    <value>{0} のパック(&amp;P)</value>
  </data>
  <data name="XprojMigrationFailedCannotReadReport" xml:space="preserve">
    <value>Could not read post-migration report at '{0}'.</value>
  </data>
  <data name="XprojMigrationGeneralFailure" xml:space="preserve">
    <value>Failed to migrate XProj project {0}. '{1}' exited with error code {2}.</value>
  </data>
</root>