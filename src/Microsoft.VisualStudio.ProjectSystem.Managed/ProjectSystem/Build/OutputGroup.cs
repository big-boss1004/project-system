// Copyright (c) Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information.

namespace Microsoft.VisualStudio.ProjectSystem.Build
{
    using System.Collections.Generic;
    using System.Collections.Immutable;
    using System.Diagnostics;

    /// <summary>
    /// A set of outputs generated by a project that fit under some common category.
    /// </summary>
    [DebuggerDisplay("Output Group {Name} ({TargetName})")]
    internal class OutputGroup : IOutputGroup
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OutputGroup"/> class.
        /// </summary>
        internal OutputGroup(string name, string targetName, string displayName, string? description, IImmutableList<KeyValuePair<string, IImmutableDictionary<string, string>>> items, bool successful)
        {
            Requires.NotNullOrEmpty(name, nameof(name));
            Requires.NotNullOrEmpty(targetName, nameof(targetName));
            Requires.NotNullOrEmpty(displayName, nameof(displayName));
            Requires.NotNull(items, nameof(items));

            Name = name;
            TargetName = targetName;
            DisplayName = displayName;
            Description = description;
            Outputs = items;
            IsSuccessful = successful;
        }

        #region IOutputGroup Members

        /// <inheritdoc/>
        public string TargetName { get; }

        /// <inheritdoc/>
        public string Name { get; }

        /// <inheritdoc/>
        public string DisplayName { get; }

        /// <inheritdoc/>
        public string? Description { get; }

        /// <inheritdoc/>
        public bool IsSuccessful { get; }

        /// <inheritdoc/>
        public IImmutableList<KeyValuePair<string, IImmutableDictionary<string, string>>> Outputs { get; }

        #endregion
    }
}
