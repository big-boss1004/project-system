<!--

  This file contains Visual Studio and designer-related properties and items for C# projects.

-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">    
    
  <PropertyGroup>
    <DefineCommonCapabilities>false</DefineCommonCapabilities>
    
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
    <AppDesignerFolder Condition="'$(AppDesignerFolder)' == ''">Properties</AppDesignerFolder>
    <AppDesignerFolderContentsVisibleOnlyInShowAllFiles Condition="'$(AppDesignerFolderContentsVisibleOnlyInShowAllFiles)' == ''">false</AppDesignerFolderContentsVisibleOnlyInShowAllFiles>
    <LanguageServiceName Condition="'$(LanguageServiceName)' == ''">C#</LanguageServiceName>
  </PropertyGroup>

    <!-- DependenciesTree capability lights up a Dependencies tree node and it's sub node providers-->
    <ProjectCapability Include="DependenciesTree" />
    
    <!-- 
      List of capabilities below is adding back common capabilities defined in imported targets.
      We disabled them with the property DefineCommonCapabilities=false to get rid of default 
      References capability, but everything else we want back.
    -->
    <ProjectCapability Include="LanguageService;
                                ProjectConfigurationsInferredFromUsage;
                                AssemblyReferences;
                                COMReferences;
                                ProjectReferences;
                                SharedProjectReferences;
                                OutputGroups;
                                AllTargetOutputGroups;
                                VisualStudioWellKnownOutputGroups;
                                SingleFileGenerators;
                                DeclaredSourceItems;
                                UserSourceItems;" />

    <PropertyPageSchema Include="$(CustomCommonXamlResourcesDirectory)AssemblyReference.xaml">
      <Context>;BrowseObject</Context>
    </PropertyPageSchema>

    <PropertyPageSchema Include="$(CustomCommonXamlResourcesDirectory)ComReference.xaml">
      <Context>;BrowseObject</Context>
    </PropertyPageSchema>

    <PropertyPageSchema Include="$(CustomCommonXamlResourcesDirectory)SdkReference.xaml">
      <Context>;BrowseObject</Context>
    </PropertyPageSchema>

    <PropertyPageSchema Include="$(CustomCommonXamlResourcesDirectory)ResolvedSdkReference.xaml">
      <Context>ProjectSubscriptionService;BrowseObject</Context>
    </PropertyPageSchema>

    <PropertyPageSchema Include="$(CustomCommonXamlResourcesDirectory)PackageReference.xaml">
      <Context>BrowseObject</Context>
    </PropertyPageSchema>

    <PropertyPageSchema Include="$(CustomCommonXamlResourcesDirectory)ResolvedPackageReference.xaml">
      <Context>ProjectSubscriptionService;BrowseObject</Context>
    </PropertyPageSchema>

  <!-- Targets -->

  <!-- Returns Csc command-line arguments for the language service -->
  <Target Name="CompileDesignTime"
          Returns="@(_CompilerCommandLineArgs)"
          DependsOnTargets="_CheckCompileDesignTimePrerequisite;Compile"
          >

    <ItemGroup>
      <_CompilerCommandLineArgs Include="@(CscCommandLineArgs)"/>
    </ItemGroup>

  </Target>

  <!-- 
      TODO:
      
      Uncomment when final tasks for raising project.lock.json data and pre-processing it to 
      fromat understood by our DesignTime build rule are checked in to sdk repo.
  -->

  <!--<Target Name="RunLockFileToMSBuild">
    --><!-- Rename and use final task from sdk to raise project.lock.json file data --><!--

    <LockFileToMSBuild2 
      ProjectLockFile="$(ProjectLockFile)">

      <Output TaskParameter="TargetDefinitions" ItemName="TargetDefinitions" />
      <Output TaskParameter="PackageDefinitions" ItemName="PackageDefinitions" />
      <Output TaskParameter="FileDefinitions" ItemName="FileDefinitions" />
      <Output TaskParameter="PackageDependencies" ItemName="PackageDependencies" />
      <Output TaskParameter="FileDependencies" ItemName="FileDependencies" />
    </LockFileToMSBuild2>

  </Target>

  <Target
        Name="ResolveDependenciesDesignTime"
        Returns="@(_DependenciesWorld)"
        DependsOnTargets="ResolveAssemblyReferencesDesignTime;RunLockFileToMSBuild"
        Condition="exists('$(ProjectLockFile)')">
   
    --><!-- Rename this task later to it's final name, when it is checked in to sdk repo --><!--
    <GetDependenciesData TargetDefinitions="@(TargetDefinitions)"
                               PackageDefinitions="@(PackageDefinitions)"
                               FileDefinitions="@(FileDefinitions)"
                               PackageDependencies="@(PackageDependencies)"
                               FileDependencies="@(FileDependencies)">

      <Output TaskParameter="DependenciesWorld" ItemName="_DependenciesWorld" />
    </GetDependenciesData>
  </Target>-->

</Project>